# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License AS
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

from openerp.osv import fields,osv
from openerp import tools

class competitiveness_management_price_record_report(osv.osv):

    _name = "competitiveness_management.price_record.report"
    _description = "Price Record Report"
    _auto = False

    _columns = {
        'product_id': fields.many2one('product.product', string='Product', readonly=True, context={'default_function_type':'formulated'}, domain=[('function_type','=','formulated')]),
        'commercial_name': fields.char(string='Commercial Name', readonly=True),
        'information_date': fields.date(string='Price Date', readonly=True),
        'usd_price': fields.float(string='Price (USD)', readonly=True),
        'operative_id': fields.many2one('res.company', string='Operative', readonly=True),
        'supplier': fields.many2one('res.partner', string='Supplier', readonly=True),
        'invoice_number': fields.char(string='Invoice Number', readonly=True),
        'user': fields.many2one('res.users', string='User', help=u"""Completar con el usuario actual""", readonly=True),
        'record_date': fields.datetime(string='Recorded', help=u"""Completar con el usuario actual""", readonly=True),
        'price_type_id': fields.many2one('competitiveness_management.price_type', string='Price Type', readonly=True), 
        'price_term_id': fields.many2one('competitiveness_management.payment_term', string='Term', readonly=True), 
    }

    _order = 'price_type_id'

    def init(self, cr):

        tools.drop_view_if_exists(cr, 'competitiveness_management_price_record_report')
        cr.execute("""
            CREATE OR REPLACE VIEW competitiveness_management_price_record_report AS (
            SELECT 
                    id, 
                    create_uid, 
                    create_date, 
                    write_date, 
                    write_uid, 
                    product_id, 
                    information_date, 
                    usd_price, 
                    price_term_id, 
                    "user", 
                    supplier, 
                    invoice_number, 
                    price_type_id, 
                    operative_id, 
                    record_date
            FROM competitiveness_management_price_record
        )""")

competitiveness_management_price_record_report()

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
